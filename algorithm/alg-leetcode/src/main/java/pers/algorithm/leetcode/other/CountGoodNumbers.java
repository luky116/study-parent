package pers.algorithm.leetcode.other;

/**
 * 我们称一个数字字符串是 好数字 当它满足（下标从 0开始）偶数 下标处的数字为 偶数且 奇数下标处的数字为 质数（2，3，5或7）。
 * <p>
 * 比方说，"2582"是好数字，因为偶数下标处的数字（2和8）是偶数且奇数下标处的数字（5 和2）为质数。
 * 但"3245"不是 好数字，因为3在偶数下标处但不是偶数。
 * 给你一个整数n，请你返回长度为n且为好数字的数字字符串总数。
 * 由于答案可能会很大，请你将它对10^9 + 7取余后返回。
 * <p>
 * 一个 数字字符串是每一位都由0到 9组成的字符串，且可能包含前导 0 。
 * <p>
 * <p>
 * <p>
 * 示例 1：
 * <p>
 * 输入：n = 1
 * 输出：5
 * 解释：长度为 1 的好数字包括 "0"，"2"，"4"，"6"，"8" 。
 * 示例 2：
 * <p>
 * 输入：n = 4
 * 输出：400
 * 示例 3：
 * <p>
 * 输入：n = 50
 * 输出：564908303
 * <p>
 * <p>
 * 提示：
 * <p>
 * 1 <= n <= 10^15
 * <p>
 * 来源：力扣（LeetCode）
 * 链接：https://leetcode-cn.com/problems/count-good-numbers
 * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 */
class CountGoodNumbers {

    /**
     * 解法错误
     */
    public int countGoodNumbers(long n) {
        int r = 1;
        for (int i = 0; i < n; i++) {
            if ((i & 1) == 0) {
                r = (r * 5) % 1000000007;
            } else {
                r = (r * 4) % 1000000007;
            }
        }
        return r;
    }
}
